<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/beans http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<!-- <security:http use-expressions="true" access-decision-manager-ref="accessDecisionManager"> -->
	<!-- 
	access="permitAll"   不設定權限,同等filter="none"
	access="isAuthenticated()"	有通過驗證
	access="hasRole('roleName')"	判定是否含有Role權限
	access="hasAnyRole('roleName1','roleName2')"	判定是否含有Role1,Role2權限
	 -->
	<security:http use-expressions="true">
		<security:intercept-url pattern="/menu/*" access="hasAnyRole('ROLE_USER')" />
		<security:intercept-url pattern="/group/*" access="hasAnyRole('ROLE_HR')" />
		<security:intercept-url pattern="/role/*" access="hasAnyRole('ROLE_HR')" />
		<security:intercept-url pattern="/permission/*" access="hasAnyRole('ROLE_HR')" />
		<security:intercept-url pattern="/user/*" access="hasAnyRole('ROLE_HR')" />
		<security:intercept-url pattern="/userSelf/*" access="hasAnyRole('ROLE_USER')" />
		<security:intercept-url pattern="/login.jsp" access="permitAll" />
		<security:intercept-url pattern="/js/**" access="permitAll" />
		<security:intercept-url pattern="/css/**" access="permitAll" />
		<security:intercept-url pattern="/img/**" access="permitAll" />
		<security:intercept-url pattern="/remote/**" access="permitAll" />
		<security:intercept-url pattern="/remoteHttpInvoke/**" access="permitAll" />
		<security:intercept-url pattern="/version.txt" access="permitAll" />
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER')" />
		<security:form-login login-processing-url="/j_spring_security_check" login-page="/login.jsp" default-target-url="/userSelf/view.do" authentication-failure-url="/login.jsp?error=1"  />
		<security:logout logout-success-url="/login.jsp" logout-url="/logout.do" />
		<security:remember-me services-ref="rememberService" key="_cookie_key"/>
	</security:http>

	<beans:bean id="rememberService" class="com.acs.core.user.service.impl.CookieRememberMeServicesImpl">
		<beans:property name="key" value="_cookie_key" />
		<beans:property name="parameter" value="remember" />
		<beans:property name="userDetailsService" ref="userService" />
		<beans:property name="alwaysRemember" value="true" />
		<beans:property name="tokenValiditySeconds" value="-1" />
	</beans:bean>
	<!-- 因security:http access-decision-manager-ref 會造成問題故不使用
	<beans:bean class="org.springframework.security.access.vote.AffirmativeBased" id="accessDecisionManager">
		<beans:property name="allowIfAllAbstainDecisions" value="false"/>
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter">
					<beans:property name="rolePrefix" value="ROLE_"/>
				</beans:bean>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
			</beans:list>
		</beans:property>
	</beans:bean> -->
	<!-- Dao provider second -->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="myAuthenticationProvider">
		</security:authentication-provider>
	</security:authentication-manager>
	<beans:bean
		class="com.acs.core.user.web.security.UserDetailsAuthenticationProvider" id="myAuthenticationProvider">
		<beans:property name="userService" ref="userService" />
	</beans:bean>
	<!-- Automatically receives AuthenticationEvent messages -->
	<beans:bean
		class="org.springframework.security.authentication.event.LoggerListener"
		id="loggerListener" />
</beans:beans>
